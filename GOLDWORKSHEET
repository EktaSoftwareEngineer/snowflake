USE ROLE ACCOUNTADMIN;
USE WAREHOUSE COMPUTE_WH;
USE SCHEMA AIRFLOWDB.GOLD;

//Create the CITY_HEALTHCARE_ACCESS_AGG_SP() stored procedure by running the below SQL command


CREATE OR REPLACE PROCEDURE AIRFLOWDB.GOLD.CITY_HEALTHCARE_ACCESS_AGG_SP()
RETURNS STRING
LANGUAGE SQL
AS
$$
BEGIN
CREATE OR REPLACE TABLE AIRFLOWDB.GOLD.CITY_HEALTHCARE_ACCESS_AGG AS
SELECT
TP.PATIENT_CITY,
COUNT(DISTINCT TP.PATIENT_ID) AS TOTAL_PATIENTS,
COUNT(DISTINCT TV.HOSPITAL_ID) AS TOTAL_HOSPITALS
FROM AIRFLOWDB.SILVER.PATIENTS_TRANSFORM TP
LEFT JOIN AIRFLOWDB.SILVER.VISITS_TRANSFORM TV
ON TP.PATIENT_ID = TV.PATIENT_ID
GROUP BY TP.PATIENT_CITY;
RETURN 'CITY_HEALTHCARE_ACCESS_AGG Create Successfully';
END;
$$;

//Create the HOSPITAL_PERFORMANCE_AGG_SP() stored procedure by running the below SQL command


CREATE OR REPLACE PROCEDURE AIRFLOWDB.GOLD.HOSPITAL_PERFORMANCE_AGG_SP()
RETURNS STRING
LANGUAGE SQL
AS
$$
BEGIN
CREATE OR REPLACE TABLE AIRFLOWDB.GOLD.HOSPITAL_PERFORMANCE_AGG AS
SELECT
HOSPITAL_ID,
HOSPITAL_NAME,
HOSPITAL_CITY,
COUNT(DISTINCT PATIENT_VISIT_ID) AS TOTAL_VISITS,
COUNT(*) AS TOTAL_TREATMENTS,
ROUND(AVG(TREATMENT_COST), 2) AS AVG_TREATMENT_COST,
ROUND(
100.0 * SUM(CASE WHEN TREATMENT_OUTCOME = 'Successful' THEN 1 ELSE 0 END) / COUNT(*),
2
) AS SUCCESS_RATE
FROM AIRFLOWDB.SILVER.TREATMENTS_TRANSFORM
GROUP BY HOSPITAL_ID, HOSPITAL_NAME, HOSPITAL_CITY;
RETURN 'HOSPITAL_PERFORMANCE_AGG Created Successfully';
END;
$$;

//Create the PATIENT_VISIT_SUMMARY_AGG_SP() stored procedure by running the below SQL command


CREATE OR REPLACE PROCEDURE AIRFLOWDB.GOLD.PATIENT_VISIT_SUMMARY_AGG_SP()
RETURNS STRING
LANGUAGE SQL
AS
$$
BEGIN
CREATE OR REPLACE TABLE AIRFLOWDB.GOLD.PATIENT_VISIT_SUMMARY_AGG AS
SELECT
PATIENT_ID,
PATIENT_FIRST_NAME,
PATIENT_LAST_NAME,
MIN(PATIENT_VISIT_DATE) AS FIRST_VISIT_DATE,
MAX(PATIENT_VISIT_DATE) AS LAST_VISIT_DATE,
COUNT(DISTINCT PATIENT_VISIT_ID) AS TOTAL_VISITS,
ROUND(
DATEDIFF(DAY, MIN(PATIENT_VISIT_DATE), MAX(PATIENT_VISIT_DATE)) /
NULLIF(COUNT(DISTINCT PATIENT_VISIT_ID) - 1, 0),
1
) AS AVG_DAYS_BETWEEN_VISITS
FROM AIRFLOWDB.SILVER.VISITS_TRANSFORM
GROUP BY PATIENT_ID, PATIENT_FIRST_NAME, PATIENT_LAST_NAME;
RETURN 'PATIENT_VISIT_SUMMARY_AGG Created Successfully';
END;
$$;

//Create the PATIENT_VALUE_AGG_SP() stored procedure by running the below SQL command


CREATE OR REPLACE PROCEDURE AIRFLOWDB.GOLD.PATIENT_VALUE_AGG_SP()
RETURNS STRING
LANGUAGE SQL
AS
$$
BEGIN
CREATE OR REPLACE TABLE AIRFLOWDB.GOLD.PATIENT_VALUE_AGG AS
SELECT
PATIENT_ID,
PATIENT_FIRST_NAME,
PATIENT_LAST_NAME,
COUNT(DISTINCT PATIENT_VISIT_ID) AS TOTAL_VISITS,
COUNT(*) AS TOTAL_TREATMENTS,
ROUND(SUM(TREATMENT_COST), 2) AS TOTAL_SPENT,
ROUND(AVG(TREATMENT_COST), 2) AS AVG_COST_PER_TREATMENT
FROM AIRFLOWDB.SILVER.TREATMENTS_TRANSFORM
GROUP BY PATIENT_ID, PATIENT_FIRST_NAME, PATIENT_LAST_NAME;
RETURN 'PATIENT_VALUE_AGG Create Successfully';
END;
$$;
